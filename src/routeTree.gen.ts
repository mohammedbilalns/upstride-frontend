/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as AuthRouteRouteImport } from './routes/auth/route'
import { Route as AdminRouteRouteImport } from './routes/admin/route'
import { Route as authenticatedRouteRouteImport } from './routes/(authenticated)/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as UnauthorizedIndexRouteImport } from './routes/unauthorized/index'
import { Route as AuthIndexRouteImport } from './routes/auth/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as authenticatedSessionsRouteImport } from './routes/(authenticated)/sessions'
import { Route as authenticatedProfileRouteImport } from './routes/(authenticated)/profile'
import { Route as authenticatedMentorsRouteImport } from './routes/(authenticated)/mentors'
import { Route as AdminUsermanagementIndexRouteImport } from './routes/admin/usermanagement/index'
import { Route as AdminMentormanagementIndexRouteImport } from './routes/admin/mentormanagement/index'
import { Route as AdminExpertisemanagementIndexRouteImport } from './routes/admin/expertisemanagement/index'
import { Route as AdminDashboardIndexRouteImport } from './routes/admin/dashboard/index'
import { Route as authenticatedHomeIndexRouteImport } from './routes/(authenticated)/home/index'
import { Route as authenticatedChatsIndexRouteImport } from './routes/(authenticated)/chats/index'
import { Route as authenticatedArticlesIndexRouteImport } from './routes/(authenticated)/articles/index'
import { Route as authenticatedMentorMentorIdRouteImport } from './routes/(authenticated)/mentor/$mentorId'
import { Route as authenticatedChatsChatIdRouteImport } from './routes/(authenticated)/chats/$chatId'
import { Route as authenticatedArticlesArticleIdRouteImport } from './routes/(authenticated)/articles/$articleId'
import { Route as authenticatedMentorRegisterIndexRouteImport } from './routes/(authenticated)/mentor/register/index'
import { Route as authenticatedArticlesCreateIndexRouteImport } from './routes/(authenticated)/articles/create/index'
import { Route as authenticatedArticlesEditArticleIdRouteImport } from './routes/(authenticated)/articles/edit/$articleId'

const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRouteRoute = AdminRouteRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const authenticatedRouteRoute = authenticatedRouteRouteImport.update({
  id: '/(authenticated)',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const UnauthorizedIndexRoute = UnauthorizedIndexRouteImport.update({
  id: '/unauthorized/',
  path: '/unauthorized/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const authenticatedSessionsRoute = authenticatedSessionsRouteImport.update({
  id: '/sessions',
  path: '/sessions',
  getParentRoute: () => authenticatedRouteRoute,
} as any)
const authenticatedProfileRoute = authenticatedProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => authenticatedRouteRoute,
} as any)
const authenticatedMentorsRoute = authenticatedMentorsRouteImport.update({
  id: '/mentors',
  path: '/mentors',
  getParentRoute: () => authenticatedRouteRoute,
} as any)
const AdminUsermanagementIndexRoute =
  AdminUsermanagementIndexRouteImport.update({
    id: '/usermanagement/',
    path: '/usermanagement/',
    getParentRoute: () => AdminRouteRoute,
  } as any)
const AdminMentormanagementIndexRoute =
  AdminMentormanagementIndexRouteImport.update({
    id: '/mentormanagement/',
    path: '/mentormanagement/',
    getParentRoute: () => AdminRouteRoute,
  } as any)
const AdminExpertisemanagementIndexRoute =
  AdminExpertisemanagementIndexRouteImport.update({
    id: '/expertisemanagement/',
    path: '/expertisemanagement/',
    getParentRoute: () => AdminRouteRoute,
  } as any)
const AdminDashboardIndexRoute = AdminDashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => AdminRouteRoute,
} as any)
const authenticatedHomeIndexRoute = authenticatedHomeIndexRouteImport.update({
  id: '/home/',
  path: '/home/',
  getParentRoute: () => authenticatedRouteRoute,
} as any)
const authenticatedChatsIndexRoute = authenticatedChatsIndexRouteImport.update({
  id: '/chats/',
  path: '/chats/',
  getParentRoute: () => authenticatedRouteRoute,
} as any)
const authenticatedArticlesIndexRoute =
  authenticatedArticlesIndexRouteImport.update({
    id: '/articles/',
    path: '/articles/',
    getParentRoute: () => authenticatedRouteRoute,
  } as any)
const authenticatedMentorMentorIdRoute =
  authenticatedMentorMentorIdRouteImport.update({
    id: '/mentor/$mentorId',
    path: '/mentor/$mentorId',
    getParentRoute: () => authenticatedRouteRoute,
  } as any)
const authenticatedChatsChatIdRoute =
  authenticatedChatsChatIdRouteImport.update({
    id: '/chats/$chatId',
    path: '/chats/$chatId',
    getParentRoute: () => authenticatedRouteRoute,
  } as any)
const authenticatedArticlesArticleIdRoute =
  authenticatedArticlesArticleIdRouteImport.update({
    id: '/articles/$articleId',
    path: '/articles/$articleId',
    getParentRoute: () => authenticatedRouteRoute,
  } as any)
const authenticatedMentorRegisterIndexRoute =
  authenticatedMentorRegisterIndexRouteImport.update({
    id: '/mentor/register/',
    path: '/mentor/register/',
    getParentRoute: () => authenticatedRouteRoute,
  } as any)
const authenticatedArticlesCreateIndexRoute =
  authenticatedArticlesCreateIndexRouteImport.update({
    id: '/articles/create/',
    path: '/articles/create/',
    getParentRoute: () => authenticatedRouteRoute,
  } as any)
const authenticatedArticlesEditArticleIdRoute =
  authenticatedArticlesEditArticleIdRouteImport.update({
    id: '/articles/edit/$articleId',
    path: '/articles/edit/$articleId',
    getParentRoute: () => authenticatedRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/mentors': typeof authenticatedMentorsRoute
  '/profile': typeof authenticatedProfileRoute
  '/sessions': typeof authenticatedSessionsRoute
  '/admin/': typeof AdminIndexRoute
  '/auth/': typeof AuthIndexRoute
  '/unauthorized': typeof UnauthorizedIndexRoute
  '/articles/$articleId': typeof authenticatedArticlesArticleIdRoute
  '/chats/$chatId': typeof authenticatedChatsChatIdRoute
  '/mentor/$mentorId': typeof authenticatedMentorMentorIdRoute
  '/articles': typeof authenticatedArticlesIndexRoute
  '/chats': typeof authenticatedChatsIndexRoute
  '/home': typeof authenticatedHomeIndexRoute
  '/admin/dashboard': typeof AdminDashboardIndexRoute
  '/admin/expertisemanagement': typeof AdminExpertisemanagementIndexRoute
  '/admin/mentormanagement': typeof AdminMentormanagementIndexRoute
  '/admin/usermanagement': typeof AdminUsermanagementIndexRoute
  '/articles/edit/$articleId': typeof authenticatedArticlesEditArticleIdRoute
  '/articles/create': typeof authenticatedArticlesCreateIndexRoute
  '/mentor/register': typeof authenticatedMentorRegisterIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/mentors': typeof authenticatedMentorsRoute
  '/profile': typeof authenticatedProfileRoute
  '/sessions': typeof authenticatedSessionsRoute
  '/admin': typeof AdminIndexRoute
  '/auth': typeof AuthIndexRoute
  '/unauthorized': typeof UnauthorizedIndexRoute
  '/articles/$articleId': typeof authenticatedArticlesArticleIdRoute
  '/chats/$chatId': typeof authenticatedChatsChatIdRoute
  '/mentor/$mentorId': typeof authenticatedMentorMentorIdRoute
  '/articles': typeof authenticatedArticlesIndexRoute
  '/chats': typeof authenticatedChatsIndexRoute
  '/home': typeof authenticatedHomeIndexRoute
  '/admin/dashboard': typeof AdminDashboardIndexRoute
  '/admin/expertisemanagement': typeof AdminExpertisemanagementIndexRoute
  '/admin/mentormanagement': typeof AdminMentormanagementIndexRoute
  '/admin/usermanagement': typeof AdminUsermanagementIndexRoute
  '/articles/edit/$articleId': typeof authenticatedArticlesEditArticleIdRoute
  '/articles/create': typeof authenticatedArticlesCreateIndexRoute
  '/mentor/register': typeof authenticatedMentorRegisterIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(authenticated)': typeof authenticatedRouteRouteWithChildren
  '/admin': typeof AdminRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/(authenticated)/mentors': typeof authenticatedMentorsRoute
  '/(authenticated)/profile': typeof authenticatedProfileRoute
  '/(authenticated)/sessions': typeof authenticatedSessionsRoute
  '/admin/': typeof AdminIndexRoute
  '/auth/': typeof AuthIndexRoute
  '/unauthorized/': typeof UnauthorizedIndexRoute
  '/(authenticated)/articles/$articleId': typeof authenticatedArticlesArticleIdRoute
  '/(authenticated)/chats/$chatId': typeof authenticatedChatsChatIdRoute
  '/(authenticated)/mentor/$mentorId': typeof authenticatedMentorMentorIdRoute
  '/(authenticated)/articles/': typeof authenticatedArticlesIndexRoute
  '/(authenticated)/chats/': typeof authenticatedChatsIndexRoute
  '/(authenticated)/home/': typeof authenticatedHomeIndexRoute
  '/admin/dashboard/': typeof AdminDashboardIndexRoute
  '/admin/expertisemanagement/': typeof AdminExpertisemanagementIndexRoute
  '/admin/mentormanagement/': typeof AdminMentormanagementIndexRoute
  '/admin/usermanagement/': typeof AdminUsermanagementIndexRoute
  '/(authenticated)/articles/edit/$articleId': typeof authenticatedArticlesEditArticleIdRoute
  '/(authenticated)/articles/create/': typeof authenticatedArticlesCreateIndexRoute
  '/(authenticated)/mentor/register/': typeof authenticatedMentorRegisterIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/auth'
    | '/about'
    | '/mentors'
    | '/profile'
    | '/sessions'
    | '/admin/'
    | '/auth/'
    | '/unauthorized'
    | '/articles/$articleId'
    | '/chats/$chatId'
    | '/mentor/$mentorId'
    | '/articles'
    | '/chats'
    | '/home'
    | '/admin/dashboard'
    | '/admin/expertisemanagement'
    | '/admin/mentormanagement'
    | '/admin/usermanagement'
    | '/articles/edit/$articleId'
    | '/articles/create'
    | '/mentor/register'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/mentors'
    | '/profile'
    | '/sessions'
    | '/admin'
    | '/auth'
    | '/unauthorized'
    | '/articles/$articleId'
    | '/chats/$chatId'
    | '/mentor/$mentorId'
    | '/articles'
    | '/chats'
    | '/home'
    | '/admin/dashboard'
    | '/admin/expertisemanagement'
    | '/admin/mentormanagement'
    | '/admin/usermanagement'
    | '/articles/edit/$articleId'
    | '/articles/create'
    | '/mentor/register'
  id:
    | '__root__'
    | '/'
    | '/(authenticated)'
    | '/admin'
    | '/auth'
    | '/about'
    | '/(authenticated)/mentors'
    | '/(authenticated)/profile'
    | '/(authenticated)/sessions'
    | '/admin/'
    | '/auth/'
    | '/unauthorized/'
    | '/(authenticated)/articles/$articleId'
    | '/(authenticated)/chats/$chatId'
    | '/(authenticated)/mentor/$mentorId'
    | '/(authenticated)/articles/'
    | '/(authenticated)/chats/'
    | '/(authenticated)/home/'
    | '/admin/dashboard/'
    | '/admin/expertisemanagement/'
    | '/admin/mentormanagement/'
    | '/admin/usermanagement/'
    | '/(authenticated)/articles/edit/$articleId'
    | '/(authenticated)/articles/create/'
    | '/(authenticated)/mentor/register/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authenticatedRouteRoute: typeof authenticatedRouteRouteWithChildren
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  AboutRoute: typeof AboutRoute
  UnauthorizedIndexRoute: typeof UnauthorizedIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(authenticated)': {
      id: '/(authenticated)'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof authenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/unauthorized/': {
      id: '/unauthorized/'
      path: '/unauthorized'
      fullPath: '/unauthorized'
      preLoaderRoute: typeof UnauthorizedIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/': {
      id: '/auth/'
      path: '/'
      fullPath: '/auth/'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/(authenticated)/sessions': {
      id: '/(authenticated)/sessions'
      path: '/sessions'
      fullPath: '/sessions'
      preLoaderRoute: typeof authenticatedSessionsRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
    '/(authenticated)/profile': {
      id: '/(authenticated)/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof authenticatedProfileRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
    '/(authenticated)/mentors': {
      id: '/(authenticated)/mentors'
      path: '/mentors'
      fullPath: '/mentors'
      preLoaderRoute: typeof authenticatedMentorsRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
    '/admin/usermanagement/': {
      id: '/admin/usermanagement/'
      path: '/usermanagement'
      fullPath: '/admin/usermanagement'
      preLoaderRoute: typeof AdminUsermanagementIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/mentormanagement/': {
      id: '/admin/mentormanagement/'
      path: '/mentormanagement'
      fullPath: '/admin/mentormanagement'
      preLoaderRoute: typeof AdminMentormanagementIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/expertisemanagement/': {
      id: '/admin/expertisemanagement/'
      path: '/expertisemanagement'
      fullPath: '/admin/expertisemanagement'
      preLoaderRoute: typeof AdminExpertisemanagementIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/dashboard/': {
      id: '/admin/dashboard/'
      path: '/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminDashboardIndexRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/(authenticated)/home/': {
      id: '/(authenticated)/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof authenticatedHomeIndexRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
    '/(authenticated)/chats/': {
      id: '/(authenticated)/chats/'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof authenticatedChatsIndexRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
    '/(authenticated)/articles/': {
      id: '/(authenticated)/articles/'
      path: '/articles'
      fullPath: '/articles'
      preLoaderRoute: typeof authenticatedArticlesIndexRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
    '/(authenticated)/mentor/$mentorId': {
      id: '/(authenticated)/mentor/$mentorId'
      path: '/mentor/$mentorId'
      fullPath: '/mentor/$mentorId'
      preLoaderRoute: typeof authenticatedMentorMentorIdRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
    '/(authenticated)/chats/$chatId': {
      id: '/(authenticated)/chats/$chatId'
      path: '/chats/$chatId'
      fullPath: '/chats/$chatId'
      preLoaderRoute: typeof authenticatedChatsChatIdRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
    '/(authenticated)/articles/$articleId': {
      id: '/(authenticated)/articles/$articleId'
      path: '/articles/$articleId'
      fullPath: '/articles/$articleId'
      preLoaderRoute: typeof authenticatedArticlesArticleIdRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
    '/(authenticated)/mentor/register/': {
      id: '/(authenticated)/mentor/register/'
      path: '/mentor/register'
      fullPath: '/mentor/register'
      preLoaderRoute: typeof authenticatedMentorRegisterIndexRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
    '/(authenticated)/articles/create/': {
      id: '/(authenticated)/articles/create/'
      path: '/articles/create'
      fullPath: '/articles/create'
      preLoaderRoute: typeof authenticatedArticlesCreateIndexRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
    '/(authenticated)/articles/edit/$articleId': {
      id: '/(authenticated)/articles/edit/$articleId'
      path: '/articles/edit/$articleId'
      fullPath: '/articles/edit/$articleId'
      preLoaderRoute: typeof authenticatedArticlesEditArticleIdRouteImport
      parentRoute: typeof authenticatedRouteRoute
    }
  }
}

interface authenticatedRouteRouteChildren {
  authenticatedMentorsRoute: typeof authenticatedMentorsRoute
  authenticatedProfileRoute: typeof authenticatedProfileRoute
  authenticatedSessionsRoute: typeof authenticatedSessionsRoute
  authenticatedArticlesArticleIdRoute: typeof authenticatedArticlesArticleIdRoute
  authenticatedChatsChatIdRoute: typeof authenticatedChatsChatIdRoute
  authenticatedMentorMentorIdRoute: typeof authenticatedMentorMentorIdRoute
  authenticatedArticlesIndexRoute: typeof authenticatedArticlesIndexRoute
  authenticatedChatsIndexRoute: typeof authenticatedChatsIndexRoute
  authenticatedHomeIndexRoute: typeof authenticatedHomeIndexRoute
  authenticatedArticlesEditArticleIdRoute: typeof authenticatedArticlesEditArticleIdRoute
  authenticatedArticlesCreateIndexRoute: typeof authenticatedArticlesCreateIndexRoute
  authenticatedMentorRegisterIndexRoute: typeof authenticatedMentorRegisterIndexRoute
}

const authenticatedRouteRouteChildren: authenticatedRouteRouteChildren = {
  authenticatedMentorsRoute: authenticatedMentorsRoute,
  authenticatedProfileRoute: authenticatedProfileRoute,
  authenticatedSessionsRoute: authenticatedSessionsRoute,
  authenticatedArticlesArticleIdRoute: authenticatedArticlesArticleIdRoute,
  authenticatedChatsChatIdRoute: authenticatedChatsChatIdRoute,
  authenticatedMentorMentorIdRoute: authenticatedMentorMentorIdRoute,
  authenticatedArticlesIndexRoute: authenticatedArticlesIndexRoute,
  authenticatedChatsIndexRoute: authenticatedChatsIndexRoute,
  authenticatedHomeIndexRoute: authenticatedHomeIndexRoute,
  authenticatedArticlesEditArticleIdRoute:
    authenticatedArticlesEditArticleIdRoute,
  authenticatedArticlesCreateIndexRoute: authenticatedArticlesCreateIndexRoute,
  authenticatedMentorRegisterIndexRoute: authenticatedMentorRegisterIndexRoute,
}

const authenticatedRouteRouteWithChildren =
  authenticatedRouteRoute._addFileChildren(authenticatedRouteRouteChildren)

interface AdminRouteRouteChildren {
  AdminIndexRoute: typeof AdminIndexRoute
  AdminDashboardIndexRoute: typeof AdminDashboardIndexRoute
  AdminExpertisemanagementIndexRoute: typeof AdminExpertisemanagementIndexRoute
  AdminMentormanagementIndexRoute: typeof AdminMentormanagementIndexRoute
  AdminUsermanagementIndexRoute: typeof AdminUsermanagementIndexRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminIndexRoute: AdminIndexRoute,
  AdminDashboardIndexRoute: AdminDashboardIndexRoute,
  AdminExpertisemanagementIndexRoute: AdminExpertisemanagementIndexRoute,
  AdminMentormanagementIndexRoute: AdminMentormanagementIndexRoute,
  AdminUsermanagementIndexRoute: AdminUsermanagementIndexRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

interface AuthRouteRouteChildren {
  AuthIndexRoute: typeof AuthIndexRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthIndexRoute: AuthIndexRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authenticatedRouteRoute: authenticatedRouteRouteWithChildren,
  AdminRouteRoute: AdminRouteRouteWithChildren,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  AboutRoute: AboutRoute,
  UnauthorizedIndexRoute: UnauthorizedIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
